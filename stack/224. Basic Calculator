/*
Implement a basic calculator to evaluate a simple expression string.

The expression string may contain open ( and closing parentheses ), the plus + or minus sign -, non-negative integers and empty spaces .

Example 1:

Input: "1 + 1"
Output: 2
Example 2:

Input: " 2-1 + 2 "
Output: 3
Example 3:

Input: "(1+(4+5+2)-3)+(6+8)"
Output: 23
Note:
You may assume that the given expression is always valid.
Do not use the eval built-in library function.
*/


class Solution {
    public int calculate(String s) {
        int sign = 1;
        int num = 0;
        Stack<Integer> st = new Stack<> ();
        //st.push(0);
        int res = 0;
        for (char c : s.toCharArray()) {
            if (Character.isDigit(c)) {
                num = 10 * num + c - '0';
            } else if (c == '+') {
                res += num * sign;
                num = 0;
                sign = 1;
            } else if (c == '-') {
                res += num * sign;
                num = 0;
                sign = -1;
            } else if (c == '(') {
                st.push(res);
                st.push(sign);
                res = 0;
                sign = 1;
            } else if (c == ')') {
                res += num * sign;
                res *= st.pop();
                res += st.pop();
                num = 0;
            }
        }
        if (num != 0) {
            res += num * sign;
        }
        return res;
    }
}
